<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ncu.newmedia.backschool.dao.ApplyDao">

    <resultMap id="applyMap" type="Apply">
        <id property="applyId" column="apply_id" />
        <result property="createTime" column="apply_create_time" />
        <result property="status" column="apply_status" typeHandler="cn.ncu.newmedia.backschool.typeHandler.EnumTypeHandler" />
        <result property="description" column="description" />
        <result property="studentId" column="student_id" />
        <result property="activityId" column="activity_id" />
        <association property="feedback" column="feedback_id" javaType="Feedback"
                     select="cn.ncu.newmedia.backschool.dao.FeedBackDao.getFeedbackById" />
    </resultMap>

    <!--这个map为了前端的查询导出功能-->
    <resultMap id="applyVoPCMap" type="ApplyVoPC">
        <id property="applyId" column="apply_id" />
        <result property="createTime" column="apply_create_time" />
        <result property="status" column="apply_status" typeHandler="cn.ncu.newmedia.backschool.typeHandler.EnumTypeHandler"/>
        <result property="description" column="description" />
        <result property="studentId" column="student_id" />
        <result property="activityId" column="activity_id" />
        <association property="student" column="student_id"
                     javaType="Student"
                     resultMap="cn.ncu.newmedia.backschool.dao.StudentDao.studentMap" />
        <association property="activity" column="activity_id" javaType="Activity"
                     resultMap="cn.ncu.newmedia.backschool.dao.ActivityDao.activityMap" />
        <association property="feedback" column="feedback_id" javaType="Feedback"
                     select="cn.ncu.newmedia.backschool.dao.FeedBackDao.getFeedbackById" />
    </resultMap>


    <insert id="insert" useGeneratedKeys="true" keyProperty="apply.applyId">
        insert into apply values (#{apply.applyId},#{apply.createTime},
                                  #{apply.status.code},#{apply.description},
                                  #{apply.activityId},#{apply.studentId})
    </insert>

    <select id="listAll" resultMap="applyMap">
        select * from apply left join feedback f on apply.apply_id = f.apply_id
    </select>


    <select id="getApplyVoPcsByActId" resultMap="applyVoPCMap">
        select * from apply ap,student s,activity ac where ac.activity_id = ap.activity_id
                                                       and ap.student_id = s.student_id
                                                       and ac.activity_id = #{activityId}
    </select>


    <select id="getAppliesByColumn" resultMap="applyMap">
        select * from apply left join feedback f on apply.apply_id = f.apply_id where ${column} = #{value}
    </select>

    <update id="changeApplyStatus">
        update apply set apply_status = #{status.code} where apply_id = #{applyId}
    </update>

    <delete id="delete">
        delete from apply where apply_id = #{applyId}
    </delete>

    <delete id="deleteByActId">
        delete from apply where activity_id = #{activityId}
    </delete>


    <select id="getApplyById" resultMap="applyMap">
        select * from apply left join feedback f on apply.apply_id = f.apply_id where apply.apply_id = #{applyId}
    </select>


    <select id="getAppVoListByKeys" resultMap="applyVoPCMap">
        select * from (select s.student_id,
        name, gender,
        college,
        class,
        idCard,
        qq,
        bank_card,
        phone,
        email,
        origin,
        high_school,
        ap.apply_id,
        apply_create_time,
        apply_status,
        description,
        ac.activity_id,
        activity_name,
        apply_start_time,
        apply_end_time,
        feedback_start_time,
        feedback_end_time,
        creator,
        activity_create_time,
        content,
        activity_file_path,
        location,
        need_examine FROM student s,apply ap,activity ac where s.student_id = ap.student_id and
        ap.activity_id = ac.activity_id) a left join feedback f on a.apply_id = f.apply_id

        <where>
            <if test="keys.studentName!=null">
                name = #{keys.studentName}
            </if>
            <if test="keys.location!=null">
                and location like concat('%',concat(#{keys.location},'%'))
            </if>
            <if test = "keys.college!=null">
                and college = #{keys.college}
            </if>
            <if test = "keys.highSchool !=null">
                and high_school = #{keys.highSchool}
            </if>
            <if test = "keys.applyStatus !=null">
                and apply_status = #{keys.applyStatus.code}
            </if>
            <if test = "keys.activityId !=null">
                and activity_id = #{keys.activityId}
            </if>
        </where>

    </select>



    <select id="getPassStudentApply" resultMap="applyVoPCMap">
        select * from (select s.student_id,
                              name, gender,
                              college,
                              class,
                              idCard,
                              qq,
                              bank_card,
                              phone,
                              email,
                              origin,
                              high_school,
                              ap.apply_id,
                              apply_create_time,
                              apply_status,
                              description,
                              ac.activity_id,
                              activity_name,
                              apply_start_time,
                              apply_end_time,
                              feedback_start_time,
                              feedback_end_time,
                              creator,
                              activity_create_time,
                              content,
                              activity_file_path,
                              location,
                              need_examine FROM student s,apply ap,activity ac where s.student_id = ap.student_id and
                           ap.activity_id = ac.activity_id) a left join feedback f on a.apply_id = f.apply_id
        where apply_status = 1 and activity_id = #{activityId}
    </select>




    <select id="getApplyByAidAndSid" resultMap="applyMap">
        select * from apply left join feedback f on apply.apply_id = f.apply_id where student_id = #{studentId} and activity_id = #{activityId}
    </select>

</mapper>