<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ncu.newmedia.backschool.dao.ApplyDao">

    <resultMap id="applyMap" type="Apply">
        <id property="id" column="apply_id" />
        <result property="createTime" column="create_time" />
        <result property="status" column="apply_status" typeHandler="cn.ncu.newmedia.backschool.typeHandler.EnumTypeHandler" />
        <result property="origin" column="origin" />
        <result property="highSchool" column="high_school" />
        <result property="description" column="description" />
        <result property="studentId" column="student_id" />
        <result property="activityId" column="activity_id" />
    </resultMap>

    <!--这个map为了前端的查询导出功能-->
    <resultMap id="applyVoMap" type="ApplyVo">
        <id property="id" column="ap_apply_id" />
        <result property="createTime" column="ap_create_time" />
        <result property="status" column="apply_status" typeHandler="cn.ncu.newmedia.backschool.typeHandler.EnumTypeHandler"/>
        <result property="origin" column="loc" />
        <result property="highSchool" column="highSchool" />
        <result property="description" column="description" />
        <association property="student" column="student_id"
                     javaType="Student"
                     resultMap="cn.ncu.newmedia.backschool.dao.StudentDao.studentMap" />
        <association property="activity" column="activity_id" javaType="Activity"
                     resultMap="cn.ncu.newmedia.backschool.dao.ActivityDao.activityMap" />
        <association property="feedback" column="feedback_id" javaType="Feedback"
                     select="cn.ncu.newmedia.backschool.dao.FeedBackDao.getFeedbackById" />
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="apply.id">
        insert into apply values (#{apply.id},#{apply.createTime},
                                  #{apply.status.code},#{apply.origin},
                                  #{apply.highSchool},#{apply.description},
                                  #{apply.studentId},#{apply.activityId})
    </insert>

    <select id="listAll" resultMap="applyMap">
        select * from apply limit #{begin},#{num};
    </select>

    <select id="getAppliesByActId" resultMap="applyMap">
        select * from apply where activity_id = #{activityId} limit #{begin},#{num}
    </select>

    <select id="getApplyCntInAct" resultType="int">
        select count(*) from apply where activity_id = #{activityId}
    </select>

    <select id="getAppVoForSuperCnt" resultType="int">
        select count(*) from (select * from (select apply.apply_id ap_apply_id,
            apply.create_time ap_create_time,
            apply_status,
            apply.origin loc,
            apply.high_school highSchool,
            description,
            student.student_id,
            name,
            gender,
            student_card,
            college,
            class,
            idCard,
            qq,
            bank_card,
            phone,
            email,
            student.origin,
            student.high_school,
            user_id,
            activity.activity_id,
            activity_name,
            apply_start_time,
            apply_end_time,
            feedback_start_time,
            feedback_end_time,
            creator,
            activity.create_time create_time,
            content,
            activity_file_path,
            location,
            need_examine from student ,apply,activity where apply.student_id = student.student_id
            and apply.activity_id = activity.activity_id ) a left join feedback on ap_apply_id = feedback.apply_id ) b where ${column} like concat('%',concat(#{value},'%'))

    </select>

    <select id="getAppliesByColumn" resultMap="applyMap">
        select * from apply where ${column} = #{value}
    </select>

    <update id="changeApplyStatus">
        update apply set apply_status = #{status.code} where apply_id = #{applyId}
    </update>

    <delete id="delete">
        delete from apply where apply_id = #{applyId}
    </delete>

    <delete id="deleteByActId">
        delete from apply where activity_id = #{activityId}
    </delete>


    <select id="getApplyById" resultMap="applyMap">
        select * from apply where apply_id = #{applyId}
    </select>

    <select id="getAppVoForSuper" resultMap="applyVoMap">
        select * FROM (select * from (select apply.apply_id ap_apply_id,
                                             apply.create_time ap_create_time,
                                             apply_status,
                                             apply.origin loc,
                                             apply.high_school highSchool,
                                             description,
                                             student.student_id,
                                             name,
                                             gender,
                                             student_card,
                                             college,
                                             class,
                                             idCard,
                                             qq,
                                             bank_card,
                                             phone,
                                             email,
                                             student.origin,
                                             student.high_school,
                                             user_id,
                                             activity.activity_id,
                                             activity_name,
                                             apply_start_time,
                                             apply_end_time,
                                             feedback_start_time,
                                             feedback_end_time,
                                             creator,
                                             activity.create_time create_time,
                                             content,
                                             activity_file_path,
                                             location,
                                             need_examine from student ,apply,activity where apply.student_id = student.student_id
                                                                                         and apply.activity_id = activity.activity_id ) a left join feedback
                                              on ap_apply_id = feedback.apply_id ) b where ${column} like concat('%',concat(#{value},'%')) limit #{begin},#{num}
    </select>


    <select id="getAppVoListByCol" resultMap="applyVoMap">
        select * FROM (select * from (select apply.apply_id ap_apply_id,
                                             apply.create_time ap_create_time,
                                             apply_status,
                                             apply.origin loc,
                                             apply.high_school highSchool,
                                             description,
                                             student.student_id,
                                             name,
                                             gender,
                                             student_card,
                                             college,
                                             class,
                                             idCard,
                                             qq,
                                             bank_card,
                                             phone,
                                             email,
                                             student.origin,
                                             student.high_school,
                                             user_id,
                                             activity.activity_id,
                                             activity_name,
                                             apply_start_time,
                                             apply_end_time,
                                             feedback_start_time,
                                             feedback_end_time,
                                             creator,
                                             activity.create_time create_time,
                                             content,
                                             activity_file_path,
                                             location,
                                             need_examine from student ,apply,activity where apply.student_id = student.student_id
                                                                                         and apply.activity_id = activity.activity_id ) a left join feedback
                                                                                                                                                    on ap_apply_id = feedback.apply_id ) b where ${column} like concat('%',concat(#{value},'%'));
    </select>

    <select id="getApplyCnt" resultType="int">
        select count(*) from apply
    </select>
</mapper>